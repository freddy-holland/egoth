// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Typing(user string, email string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(`{ text: '' , textArray : ['` + user + `', '` + email + `' ], textIndex: 0, charIndex: 0, typeSpeed: 110,
    cursorSpeed: 550, pauseEnd: 1500, pauseStart: 20, direction: 'forward' , }`)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/typing.templ`, Line: 6, Col: 79}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\" x-init=\"$nextTick(() =&gt; {\n        let typingInterval = setInterval(startTyping, $data.typeSpeed);\n    \n        function startTyping(){\n            let current = $data.textArray[ $data.textIndex ];\n            \n            // check to see if we hit the end of the string\n            if($data.charIndex &gt; current.length){\n                    $data.direction = &#39;backward&#39;;\n                    clearInterval(typingInterval);\n                    \n                    setTimeout(function(){\n                        typingInterval = setInterval(startTyping, $data.typeSpeed);\n                    }, $data.pauseEnd);\n            }   \n                \n            $data.text = current.substring(0, $data.charIndex);\n            \n            if($data.direction == &#39;forward&#39;)\n            {\n                $data.charIndex += 1;\n            } \n            else \n            {\n                if($data.charIndex == 0)\n                {\n                    $data.direction = &#39;forward&#39;;\n                    clearInterval(typingInterval);\n                    setTimeout(function(){\n                        $data.textIndex += 1;\n                        if($data.textIndex &gt;= $data.textArray.length)\n                        {\n                            $data.textIndex = 0;\n                        }\n                        typingInterval = setInterval(startTyping, $data.typeSpeed);\n                    }, $data.pauseStart);\n                }\n                $data.charIndex -= 1;\n            }\n        }\n                    \n        setInterval(function(){\n            if($refs.cursor.classList.contains(&#39;hidden&#39;))\n            {\n                $refs.cursor.classList.remove(&#39;hidden&#39;);\n            } \n            else \n            {\n                $refs.cursor.classList.add(&#39;hidden&#39;);\n            }\n        }, $data.cursorSpeed);\n\n    })\" class=\"flex items-center justify-center mx-auto text-center max-w-7xl\"><div class=\"relative flex items-center justify-center h-auto\"><p class=\"text-2xl font-black leading-tight\" x-text=\"text\"></p><span class=\"absolute right-0 w-2 -mr-2 bg-black h-3/4\" x-ref=\"cursor\"></span></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
